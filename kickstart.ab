import { input_prompt } from "std/env"
import { dir_create, dir_exists } from "std/fs"
import { file_download } from "std/http"

// Global config
const output_parent = "../akademika/elyse/kattis/"
const template_repo = "../akademika/elyse/kattis/"
const editor_command_symbol = "code" 

echo "*** Kattis kickstart ***"

if not dir_exists(output_parent) {
    echo "Unable to locate output directory. Expected to find {output_parent}"
    exit(1)
}

if not dir_exists(output_parent) {
    echo "Note: Did not locate solution template source. Expected {template_repo}"
}

const keyword = input_prompt("Problem code name: >")
// const keyword = "4thought"

echo "Ok, will initialize {keyword}."

fun download_samples(keyword: Text, folder: Text): Null {
    // https://open.kattis.com/problems/99problems2/file/statement/samples.zip
    const file_name = "samples.zip"
    const url =  "https://open.kattis.com/problems/{keyword}/file/statement/{file_name}"
    echo url

    echo "Downloading samples.."
    if file_download(url, "{folder}/{file_name}") {
        echo "Done.."
    }else {
        echo "Unable to downlaod samples :("
        exit(1)
    }


    echo "Unzipping.."
    // TODO: Use 'file_name' variable here?
    $unzip -d {folder} {folder}/*zip$ failed {
        echo "Unable to unzip, exiting :("
        exit(1)
    }
    echo "Done.."
}

fun make_problem_folder(keyword: Text): Text {
    const target = keyword
    if dir_exists(target) {
        echo "Folder already exists..."
    }else {
        dir_create(target)
    }
    return target
}

fun open_editor(command_symbol: Text, target_folder: Text): Null {
    echo "Opening editor."
    ${command_symbol} {target_folder}$ failed {
        echo "Unable to open editor :("
    }
}

const problem_folder = make_problem_folder(keyword)
download_samples(keyword, problem_folder)
open_editor(editor_command_symbol, problem_folder)